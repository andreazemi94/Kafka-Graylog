version: '3.8'

networks:
  my-project:
    name: my-project
    driver: bridge

volumes:
  postgres-volume-kafka-graylog:
  mongo-data-kafka-graylog:
  es-data-kafka-graylog:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: my-project-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      my-project:
        aliases:
          - zookeeper.my-project.it

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: my-project-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    networks:
      my-project:
        aliases:
          - kafka.my-project.it
  
  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    container_name: schema-registry
    depends_on:
     - kafka
    ports:
     - "8085:8085"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
    networks:
      my-project:
        aliases:
         - schemaregistry.my-project.it

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: my-project-control-center
    depends_on:
      - kafka
      - schema-registry
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      CONTROL_CENTER_CONNECT_CLUSTER: http://connect:8083
      CONTROL_CENTER_KSQL_KSQLDB_URL: http://ksqldb-server:8088
      CONTROL_CENTER_METRICS_TOPIC_NUM_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
    ports:
      - "9021:9021"
    networks:
      my-project:
        aliases:
          - control-center.my-project.it

  graylog:
    image: graylog/graylog:5.0
    container_name: my-project-graylog
    environment:
      GRAYLOG_PASSWORD_SECRET: graylogpassword2
      GRAYLOG_ROOT_PASSWORD_SHA2: dc53c4b732a64731f0aaacb441533915e059c570fd88cf7438b5c564e088635f
      GRAYLOG_HTTP_EXTERNAL_URI: http://graylog:9000/
    ports:
      - "9000:9000"
      - "12201:12201"
    depends_on:
      - mongo
      - elasticsearch
      - kafka
    networks:
      my-project:
        aliases:
          - graylog.my-project.it

  mongo:
    image: mongo:5.0
    container_name: my-project-mongo
    volumes:
      - mongo-data-kafka-graylog:/data/db
    networks:
      my-project:
        aliases:
          - mongo.my-project.it

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: my-project-elasticsearch
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data-kafka-graylog:/usr/share/elasticsearch/data
    networks:
      my-project:
        aliases:
          - elasticsearch.my-project.it

  postgresql:
    image: postgres
    container_name: my-project-postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=graylog-publisher_user
      - POSTGRES_PASSWORD=graylog-publisher
      - POSTGRES_DB=graylog-publisher
      - PGDATA=/var/lib/postgresql/data/pgdata
      - SCHED_DB_BACKUP="false"
    volumes:
      - postgres-volume-kafka-graylog:/var/lib/postgresql/data/pgdata
    networks:
      my-project:
        aliases:
          - postgres.my-project.it

  microservice-order:
    image: order-microservice:latest
    container_name: order-microservice
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/graylog-publisher
      SPRING_DATASOURCE_USERNAME: graylog-publisher_user
      SPRING_DATASOURCE_PASSWORD: graylog-publisher
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      SPRING_KAFKA_TOPIC_ORDER: microservice-order
      SPRING_KAFKA_TOPIC_INVOICE: microservice-invoice
      SPRING_KAFKA_TOPIC_GRAYLOG: graylog-publisher
      SPRING_KAFKA_CONSUMER_GROUP_ID: order-microservice-group
    depends_on:
      - kafka
      - mongo
      - elasticsearch
      - graylog
      - postgresql
    networks:
      my-project:
        aliases:
          - order-microservice.my-project.it

  microservice-graylogpub:
    image: graylogpub-microservice:latest
    container_name: graylogpub-microservice
    ports:
      - "8080:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      SPRING_KAFKA_TOPIC_GRAYLOG: graylog-publisher
      SPRING_KAFKA_TOPIC_GRAYLOG_PUB: graylog-message
      SPRING_KAFKA_CONSUMER_GROUP_ID: graylog-message-microservice-group
    depends_on:
      - kafka
      - mongo
      - elasticsearch
      - graylog
      - postgresql
    networks:
      my-project:
        aliases:
          - order-microservice.my-project.it

  microservice-invoice:
    image: invoice-microservice:latest
    container_name: invoice-microservice
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/graylog-publisher
      SPRING_DATASOURCE_USERNAME: graylog-publisher_user
      SPRING_DATASOURCE_PASSWORD: graylog-publisher
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_PROPERTIES_SCHEMA_REGISTRY_URL: http://schema-registry:8085
      SPRING_KAFKA_TOPIC_ORDER: microservice-order
      SPRING_KAFKA_TOPIC_INVOICE: microservice-invoice
      SPRING_KAFKA_TOPIC_GRAYLOG: graylog-publisher
      SPRING_KAFKA_CONSUMER_GROUP_ID: invoice-microservice-group
    depends_on:
      - kafka
      - mongo
      - elasticsearch
      - graylog
      - postgresql
    networks:
      my-project:
        aliases:
          - order-microservice.my-project.it